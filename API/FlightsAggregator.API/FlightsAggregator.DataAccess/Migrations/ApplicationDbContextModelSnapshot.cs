// <auto-generated />
using System;
using FlightsAggregator.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightsAggregator.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FlightsAggregator.Models.Domain.ApplicationDbContext.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("FlightId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("NumberOfSeats")
                        .HasColumnType("tinyint");

                    b.Property<string>("PassengerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("FlightsAggregator.Models.Domain.ApplicationDbContext.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Airline")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainingNumberOfSeats")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad8a3d85-a5e3-457d-b9ac-b593a2d8ee04"),
                            Airline = "American Airlines",
                            Price = "895",
                            RemainingNumberOfSeats = 283
                        },
                        new
                        {
                            Id = new Guid("de443a10-0590-45fb-a979-236e02f71da4"),
                            Airline = "Deutsche BA",
                            Price = "3461",
                            RemainingNumberOfSeats = 454
                        },
                        new
                        {
                            Id = new Guid("3ed06715-0de2-45b4-9981-be85678298ba"),
                            Airline = "British Airways",
                            Price = "4248",
                            RemainingNumberOfSeats = 561
                        });
                });

            modelBuilder.Entity("FlightsAggregator.Models.Domain.ApplicationDbContext.Passenger", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("FlightsAggregator.Models.Domain.ApplicationDbContext.Booking", b =>
                {
                    b.HasOne("FlightsAggregator.Models.Domain.ApplicationDbContext.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("FlightsAggregator.Models.Domain.ApplicationDbContext.Flight", b =>
                {
                    b.OwnsOne("FlightsAggregator.Models.Domain.ApplicationDbContext.TimePlace", "Arrival", b1 =>
                        {
                            b1.Property<Guid>("FlightId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Place")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("Time")
                                .HasColumnType("datetime2");

                            b1.HasKey("FlightId");

                            b1.ToTable("Flights");

                            b1.WithOwner()
                                .HasForeignKey("FlightId");

                            b1.HasData(
                                new
                                {
                                    FlightId = new Guid("ad8a3d85-a5e3-457d-b9ac-b593a2d8ee04"),
                                    Place = "Istanbul",
                                    Time = new DateTime(2023, 12, 13, 23, 6, 16, 706, DateTimeKind.Local).AddTicks(8889)
                                },
                                new
                                {
                                    FlightId = new Guid("de443a10-0590-45fb-a979-236e02f71da4"),
                                    Place = "Schiphol",
                                    Time = new DateTime(2023, 12, 14, 1, 6, 16, 706, DateTimeKind.Local).AddTicks(8896)
                                },
                                new
                                {
                                    FlightId = new Guid("3ed06715-0de2-45b4-9981-be85678298ba"),
                                    Place = "Vizzola-Ticino",
                                    Time = new DateTime(2023, 12, 14, 3, 6, 16, 706, DateTimeKind.Local).AddTicks(8899)
                                });
                        });

                    b.OwnsOne("FlightsAggregator.Models.Domain.ApplicationDbContext.TimePlace", "Departure", b1 =>
                        {
                            b1.Property<Guid>("FlightId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Place")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("Time")
                                .HasColumnType("datetime2");

                            b1.HasKey("FlightId");

                            b1.ToTable("Flights");

                            b1.WithOwner()
                                .HasForeignKey("FlightId");

                            b1.HasData(
                                new
                                {
                                    FlightId = new Guid("ad8a3d85-a5e3-457d-b9ac-b593a2d8ee04"),
                                    Place = "Los Angeles",
                                    Time = new DateTime(2023, 12, 13, 17, 6, 16, 706, DateTimeKind.Local).AddTicks(8687)
                                },
                                new
                                {
                                    FlightId = new Guid("de443a10-0590-45fb-a979-236e02f71da4"),
                                    Place = "Munchen",
                                    Time = new DateTime(2023, 12, 13, 17, 6, 16, 706, DateTimeKind.Local).AddTicks(8759)
                                },
                                new
                                {
                                    FlightId = new Guid("3ed06715-0de2-45b4-9981-be85678298ba"),
                                    Place = "London",
                                    Time = new DateTime(2023, 12, 13, 17, 6, 16, 706, DateTimeKind.Local).AddTicks(8763)
                                });
                        });

                    b.Navigation("Arrival")
                        .IsRequired();

                    b.Navigation("Departure")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
