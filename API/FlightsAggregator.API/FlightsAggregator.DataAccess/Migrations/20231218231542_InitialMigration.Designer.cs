// <auto-generated />
using System;
using FlightsAggregator.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightsAggregator.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231218231542_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FlightsAggregator.Models.Domain.ApplicationDbContext.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("FlightId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("NumberOfSeats")
                        .HasColumnType("tinyint");

                    b.Property<string>("PassengerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("FlightsAggregator.Models.Domain.ApplicationDbContext.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Airline")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainingNumberOfSeats")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = new Guid("572276eb-e09a-47be-a01c-a2bf88cd5898"),
                            Airline = "American Airlines",
                            Price = "3318",
                            RemainingNumberOfSeats = 205
                        },
                        new
                        {
                            Id = new Guid("a3082f01-a9fb-43b3-951e-caef3f4ced4f"),
                            Airline = "Deutsche BA",
                            Price = "3376",
                            RemainingNumberOfSeats = 463
                        },
                        new
                        {
                            Id = new Guid("6ce7df58-6735-41a8-aedd-2bc2d697ec8a"),
                            Airline = "British Airways",
                            Price = "3276",
                            RemainingNumberOfSeats = 195
                        });
                });

            modelBuilder.Entity("FlightsAggregator.Models.Domain.ApplicationDbContext.Passenger", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("FlightsAggregator.Models.Domain.ApplicationDbContext.Booking", b =>
                {
                    b.HasOne("FlightsAggregator.Models.Domain.ApplicationDbContext.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("FlightsAggregator.Models.Domain.ApplicationDbContext.Flight", b =>
                {
                    b.OwnsOne("FlightsAggregator.Models.Domain.ApplicationDbContext.TimePlace", "Arrival", b1 =>
                        {
                            b1.Property<Guid>("FlightId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Place")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("Time")
                                .HasColumnType("datetime2");

                            b1.HasKey("FlightId");

                            b1.ToTable("Flights");

                            b1.WithOwner()
                                .HasForeignKey("FlightId");

                            b1.HasData(
                                new
                                {
                                    FlightId = new Guid("572276eb-e09a-47be-a01c-a2bf88cd5898"),
                                    Place = "Istanbul",
                                    Time = new DateTime(2023, 12, 19, 18, 15, 42, 277, DateTimeKind.Local).AddTicks(1165)
                                },
                                new
                                {
                                    FlightId = new Guid("a3082f01-a9fb-43b3-951e-caef3f4ced4f"),
                                    Place = "Schiphol",
                                    Time = new DateTime(2023, 12, 19, 20, 15, 42, 277, DateTimeKind.Local).AddTicks(1169)
                                },
                                new
                                {
                                    FlightId = new Guid("6ce7df58-6735-41a8-aedd-2bc2d697ec8a"),
                                    Place = "Vizzola-Ticino",
                                    Time = new DateTime(2023, 12, 19, 22, 15, 42, 277, DateTimeKind.Local).AddTicks(1170)
                                });
                        });

                    b.OwnsOne("FlightsAggregator.Models.Domain.ApplicationDbContext.TimePlace", "Departure", b1 =>
                        {
                            b1.Property<Guid>("FlightId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Place")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("Time")
                                .HasColumnType("datetime2");

                            b1.HasKey("FlightId");

                            b1.ToTable("Flights");

                            b1.WithOwner()
                                .HasForeignKey("FlightId");

                            b1.HasData(
                                new
                                {
                                    FlightId = new Guid("572276eb-e09a-47be-a01c-a2bf88cd5898"),
                                    Place = "Los Angeles",
                                    Time = new DateTime(2023, 12, 19, 12, 15, 42, 277, DateTimeKind.Local).AddTicks(1040)
                                },
                                new
                                {
                                    FlightId = new Guid("a3082f01-a9fb-43b3-951e-caef3f4ced4f"),
                                    Place = "Munchen",
                                    Time = new DateTime(2023, 12, 19, 12, 15, 42, 277, DateTimeKind.Local).AddTicks(1101)
                                },
                                new
                                {
                                    FlightId = new Guid("6ce7df58-6735-41a8-aedd-2bc2d697ec8a"),
                                    Place = "London",
                                    Time = new DateTime(2023, 12, 19, 12, 15, 42, 277, DateTimeKind.Local).AddTicks(1104)
                                });
                        });

                    b.Navigation("Arrival")
                        .IsRequired();

                    b.Navigation("Departure")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
